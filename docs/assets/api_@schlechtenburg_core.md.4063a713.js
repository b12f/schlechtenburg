import{_ as e,c as o,o as l,a as r}from"./app.d1307649.js";const g='{"title":"@schlechtenburg/core","description":"","frontmatter":{},"headers":[{"level":2,"title":"SbMode","slug":"sbmode"},{"level":2,"title":"IBlockData<T>","slug":"iblockdata-t"},{"level":2,"title":"IBlockDefinition<T>","slug":"iblockdefinition-t"},{"level":2,"title":"IBlockLibrary","slug":"iblocklibrary"},{"level":2,"title":"IBlockProps<T>","slug":"iblockprops-t"},{"level":2,"title":"ISbMainProps","slug":"isbmainprops"},{"level":2,"title":"ITreeNode","slug":"itreenode"},{"level":2,"title":"OnActivateNextCb","slug":"onactivatenextcb"},{"level":2,"title":"OnActivatePreviousCb","slug":"onactivatepreviouscb"},{"level":2,"title":"OnAppendBlockCb","slug":"onappendblockcb"},{"level":2,"title":"OnPrependBlockCb","slug":"onprependblockcb"},{"level":2,"title":"OnRemoveSelfCb","slug":"onremoveselfcb"},{"level":2,"title":"OnUpdateBlockCb","slug":"onupdateblockcb"},{"level":2,"title":"OnUpdateSelfCb<T>","slug":"onupdateselfcb-t"},{"level":2,"title":"SbBlock","slug":"sbblock"},{"level":3,"title":"Props","slug":"props"},{"level":2,"title":"SbBlockOrdering","slug":"sbblockordering"},{"level":3,"title":"Props","slug":"props-1"},{"level":2,"title":"SbBlockPicker","slug":"sbblockpicker"},{"level":3,"title":"Props","slug":"props-2"},{"level":2,"title":"SbBlockPlaceholder","slug":"sbblockplaceholder"},{"level":3,"title":"Props","slug":"props-3"},{"level":2,"title":"SbButton","slug":"sbbutton"},{"level":3,"title":"Props","slug":"props-4"},{"level":2,"title":"SbMain","slug":"sbmain"},{"level":2,"title":"SbSelect","slug":"sbselect"},{"level":3,"title":"Props","slug":"props-5"},{"level":2,"title":"SbToolbar","slug":"sbtoolbar"},{"level":3,"title":"Props","slug":"props-6"},{"level":2,"title":"SymActiveBlock","slug":"symactiveblock"},{"level":2,"title":"SymBlockDimensions","slug":"symblockdimensions"},{"level":2,"title":"SymBlockLibrary","slug":"symblocklibrary"},{"level":2,"title":"SymEditorDimensions","slug":"symeditordimensions"},{"level":2,"title":"SymMode","slug":"symmode"},{"level":2,"title":"blockProps","slug":"blockprops"},{"level":2,"title":"model","slug":"model"},{"level":2,"title":"generateBlockId","slug":"generateblockid"},{"level":2,"title":"useActivation","slug":"useactivation"},{"level":2,"title":"useBlockSizing","slug":"useblocksizing"},{"level":2,"title":"useDynamicBlocks","slug":"usedynamicblocks"},{"level":2,"title":"useResizeObserver","slug":"useresizeobserver"}],"relativePath":"api/@schlechtenburg/core.md"}',a={},i=r('<h1 id="schlechtenburg-core" tabindex="-1">@schlechtenburg/core <a class="header-anchor" href="#schlechtenburg-core" aria-hidden="true">#</a></h1><h2 id="sbmode" tabindex="-1">SbMode <a class="header-anchor" href="#sbmode" aria-hidden="true">#</a></h2><p>The mode the Schlechtenburg editor is currently in</p><ul><li><p><strong>Type</strong> <code>Enumeration</code></p></li><li><p><strong>Members</strong></p><ul><li><strong>Edit</strong>: <code>undefined</code></li><li><strong>View</strong>: <code>undefined</code></li></ul></li></ul><h2 id="iblockdata-t" tabindex="-1">IBlockData&lt;T&gt; <a class="header-anchor" href="#iblockdata-t" aria-hidden="true">#</a></h2><p>Schlechtenburg inputs and outputs a plain JS Object that can be JSON stringified. This is the interface type for that data structure. <code>T</code> will be the data type of the specific block being</p><ul><li><p><strong>Type</strong> <code>Interface</code></p></li><li><p><strong>Members</strong></p><ul><li><strong>data</strong>: <code>T</code></li><li><strong>id</strong>: <code>string</code></li><li><strong>name</strong>: <code>string</code></li></ul></li></ul><h2 id="iblockdefinition-t" tabindex="-1">IBlockDefinition&lt;T&gt; <a class="header-anchor" href="#iblockdefinition-t" aria-hidden="true">#</a></h2><p>Any Block that you create</p><ul><li><p><strong>Type</strong> <code>Interface</code></p></li><li><p><strong>Members</strong></p><ul><li><strong>edit</strong>: <code>Component</code></li><li><strong>getDefaultData</strong>: <code>T</code></li><li><strong>icon</strong>: <code>string</code></li><li><strong>name</strong>: <code>string</code></li><li><strong>view</strong>: <code>Component</code></li></ul></li></ul><h2 id="iblocklibrary" tabindex="-1">IBlockLibrary <a class="header-anchor" href="#iblocklibrary" aria-hidden="true">#</a></h2><p>Schlechtenburg maintains a library of blocks that are available</p><ul><li><strong>Type</strong> <code>Interface</code></li></ul><h2 id="iblockprops-t" tabindex="-1">IBlockProps&lt;T&gt; <a class="header-anchor" href="#iblockprops-t" aria-hidden="true">#</a></h2><p>Any Block that you create</p><ul><li><p><strong>Type</strong> <code>Interface</code></p></li><li><p><strong>Members</strong></p><ul><li><strong>blockId</strong>: <code>string</code></li><li><strong>data</strong>: <code>T</code></li><li><strong>onActivateNext</strong>: <code>OnActivateNextCb</code></li><li><strong>onActivatePrevious</strong>: <code>OnActivatePreviousCb</code></li><li><strong>onAppendBlock</strong>: <code>OnAppendBlockCb</code></li><li><strong>onPrependBlock</strong>: <code>OnPrependBlockCb</code></li><li><strong>onRemoveSelf</strong>: <code>OnRemoveSelfCb</code></li><li><strong>onUpdate</strong>: <code>OnUpdateSelfCb</code></li></ul></li></ul><h2 id="isbmainprops" tabindex="-1">ISbMainProps <a class="header-anchor" href="#isbmainprops" aria-hidden="true">#</a></h2><ul><li><p><strong>Type</strong> <code>Interface</code></p></li><li><p><strong>Members</strong></p><ul><li><strong>availableBlocks</strong>: <code>undefined</code></li><li><strong>block</strong>: <code>IBlockData</code></li><li><strong>mode</strong>: <code>SbMode</code></li><li><strong>onUpdate</strong>: <code>OnUpdateBlockCb</code></li></ul></li></ul><h2 id="itreenode" tabindex="-1">ITreeNode <a class="header-anchor" href="#itreenode" aria-hidden="true">#</a></h2><p>Schlechtenburg keeps track of the rendered block tree. This is useful for e.g. the tree select component in the editor header.</p><ul><li><p><strong>Type</strong> <code>Interface</code></p></li><li><p><strong>Members</strong></p><ul><li><strong>children</strong>: <code>undefined</code></li><li><strong>icon</strong>: <code>string</code></li><li><strong>id</strong>: <code>string</code></li><li><strong>name</strong>: <code>string</code></li></ul></li></ul><h2 id="onactivatenextcb" tabindex="-1">OnActivateNextCb <a class="header-anchor" href="#onactivatenextcb" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Type alias</code></li></ul><h2 id="onactivatepreviouscb" tabindex="-1">OnActivatePreviousCb <a class="header-anchor" href="#onactivatepreviouscb" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Type alias</code></li></ul><h2 id="onappendblockcb" tabindex="-1">OnAppendBlockCb <a class="header-anchor" href="#onappendblockcb" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Type alias</code></li></ul><h2 id="onprependblockcb" tabindex="-1">OnPrependBlockCb <a class="header-anchor" href="#onprependblockcb" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Type alias</code></li></ul><h2 id="onremoveselfcb" tabindex="-1">OnRemoveSelfCb <a class="header-anchor" href="#onremoveselfcb" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Type alias</code></li></ul><h2 id="onupdateblockcb" tabindex="-1">OnUpdateBlockCb <a class="header-anchor" href="#onupdateblockcb" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Type alias</code></li></ul><h2 id="onupdateselfcb-t" tabindex="-1">OnUpdateSelfCb&lt;T&gt; <a class="header-anchor" href="#onupdateselfcb-t" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Type alias</code></li></ul><h2 id="sbblock" tabindex="-1">SbBlock <a class="header-anchor" href="#sbblock" aria-hidden="true">#</a></h2><p>Displays a Schlechtenburg block either the mode of the schlechtenburg instance. You can use this to display child blocks inside your own blocks.</p><ul><li><strong>Type</strong>: <code>Component</code></li></ul><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-hidden="true">#</a></h3><h4 id="block" tabindex="-1">block <a class="header-anchor" href="#block" aria-hidden="true">#</a></h4><p>The state for the block.</p><ul><li><strong>Type</strong> <code>IBlockData&lt;any&gt;</code></li></ul><h4 id="onupdate" tabindex="-1">onUpdate <a class="header-anchor" href="#onupdate" aria-hidden="true">#</a></h4><p>Called when the block should be updated.</p><ul><li><p><strong>Type</strong> <code>OnUpdateBlockCb</code></p></li><li><p><strong>Default value</strong> <code>() =&gt; {}</code></p></li></ul><h4 id="onprependblock" tabindex="-1">onPrependBlock <a class="header-anchor" href="#onprependblock" aria-hidden="true">#</a></h4><p>Called when a sibling block should be inserted before the block</p><ul><li><p><strong>Type</strong> <code>OnPrependBlockCb</code></p></li><li><p><strong>Default value</strong> <code>() =&gt; {}</code></p></li></ul><h4 id="onappendblock" tabindex="-1">onAppendBlock <a class="header-anchor" href="#onappendblock" aria-hidden="true">#</a></h4><p>Called when a sibling block should be inserted after the block</p><ul><li><p><strong>Type</strong> <code>OnAppendBlockCb</code></p></li><li><p><strong>Default value</strong> <code>() =&gt; {}</code></p></li></ul><h4 id="onremoveself" tabindex="-1">onRemoveSelf <a class="header-anchor" href="#onremoveself" aria-hidden="true">#</a></h4><p>Called when the block should be removed</p><ul><li><p><strong>Type</strong> <code>OnRemoveSelfCb</code></p></li><li><p><strong>Default value</strong> <code>() =&gt; {}</code></p></li></ul><h4 id="onactivateprevious" tabindex="-1">onActivatePrevious <a class="header-anchor" href="#onactivateprevious" aria-hidden="true">#</a></h4><p>Called when the previous sibling block should be activated</p><ul><li><p><strong>Type</strong> <code>OnActivatePreviousCb</code></p></li><li><p><strong>Default value</strong> <code>() =&gt; {}</code></p></li></ul><h4 id="onactivatenext" tabindex="-1">onActivateNext <a class="header-anchor" href="#onactivatenext" aria-hidden="true">#</a></h4><p>Called when the next sibling block should be activated</p><ul><li><p><strong>Type</strong> <code>OnActivateNextCb</code></p></li><li><p><strong>Default value</strong> <code>() =&gt; {}</code></p></li></ul><h2 id="sbblockordering" tabindex="-1">SbBlockOrdering <a class="header-anchor" href="#sbblockordering" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong>: <code>Component</code></li></ul><h3 id="props-1" tabindex="-1">Props <a class="header-anchor" href="#props-1" aria-hidden="true">#</a></h3><h4 id="orientation" tabindex="-1">orientation <a class="header-anchor" href="#orientation" aria-hidden="true">#</a></h4><ul><li><p><strong>Type</strong> <code>string</code></p></li><li><p><strong>Default value</strong> <code>null</code></p></li></ul><h4 id="onremove" tabindex="-1">onRemove <a class="header-anchor" href="#onremove" aria-hidden="true">#</a></h4><ul><li><p><strong>Type</strong> <code>func</code></p></li><li><p><strong>Default value</strong> <code>() =&gt; {}</code></p></li></ul><h4 id="onmovebackward" tabindex="-1">onMoveBackward <a class="header-anchor" href="#onmovebackward" aria-hidden="true">#</a></h4><ul><li><p><strong>Type</strong> <code>func</code></p></li><li><p><strong>Default value</strong> <code>() =&gt; {}</code></p></li></ul><h4 id="onmoveforward" tabindex="-1">onMoveForward <a class="header-anchor" href="#onmoveforward" aria-hidden="true">#</a></h4><ul><li><p><strong>Type</strong> <code>func</code></p></li><li><p><strong>Default value</strong> <code>() =&gt; {}</code></p></li></ul><h2 id="sbblockpicker" tabindex="-1">SbBlockPicker <a class="header-anchor" href="#sbblockpicker" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong>: <code>Component</code></li></ul><h3 id="props-2" tabindex="-1">Props <a class="header-anchor" href="#props-2" aria-hidden="true">#</a></h3><h4 id="onpickedblock" tabindex="-1">onPickedBlock <a class="header-anchor" href="#onpickedblock" aria-hidden="true">#</a></h4><ul><li><p><strong>Type</strong> <code>func</code></p></li><li><p><strong>Default value</strong> <code>() =&gt; {}</code></p></li></ul><h2 id="sbblockplaceholder" tabindex="-1">SbBlockPlaceholder <a class="header-anchor" href="#sbblockplaceholder" aria-hidden="true">#</a></h2><p>A placeholder for a block. Displays a placeholder for a block, allowing the user to select a block to insert.</p><ul><li><strong>Type</strong>: <code>Component</code></li></ul><h3 id="props-3" tabindex="-1">Props <a class="header-anchor" href="#props-3" aria-hidden="true">#</a></h3><h4 id="oninsertblock" tabindex="-1">onInsertBlock <a class="header-anchor" href="#oninsertblock" aria-hidden="true">#</a></h4><p>Called when the user picked a block that should be inserted here.</p><ul><li><p><strong>Type</strong> <code>func</code></p></li><li><p><strong>Default value</strong> <code>() =&gt; {}</code></p></li></ul><h2 id="sbbutton" tabindex="-1">SbButton <a class="header-anchor" href="#sbbutton" aria-hidden="true">#</a></h2><p>A button in the schlechtenburg theme</p><ul><li><strong>Type</strong>: <code>Component</code></li></ul><h3 id="props-4" tabindex="-1">Props <a class="header-anchor" href="#props-4" aria-hidden="true">#</a></h3><h2 id="sbmain" tabindex="-1">SbMain <a class="header-anchor" href="#sbmain" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Variable</code></li></ul><h2 id="sbselect" tabindex="-1">SbSelect <a class="header-anchor" href="#sbselect" aria-hidden="true">#</a></h2><p>A select input in the schlechtenburg theme</p><ul><li><strong>Type</strong>: <code>Component</code></li></ul><h3 id="props-5" tabindex="-1">Props <a class="header-anchor" href="#props-5" aria-hidden="true">#</a></h3><h2 id="sbtoolbar" tabindex="-1">SbToolbar <a class="header-anchor" href="#sbtoolbar" aria-hidden="true">#</a></h2><p>Toolbar in the schlechtenburg theme</p><ul><li><strong>Type</strong>: <code>Component</code></li></ul><h3 id="props-6" tabindex="-1">Props <a class="header-anchor" href="#props-6" aria-hidden="true">#</a></h3><h2 id="symactiveblock" tabindex="-1">SymActiveBlock <a class="header-anchor" href="#symactiveblock" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Variable</code></li></ul><h2 id="symblockdimensions" tabindex="-1">SymBlockDimensions <a class="header-anchor" href="#symblockdimensions" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Variable</code></li></ul><h2 id="symblocklibrary" tabindex="-1">SymBlockLibrary <a class="header-anchor" href="#symblocklibrary" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Variable</code></li></ul><h2 id="symeditordimensions" tabindex="-1">SymEditorDimensions <a class="header-anchor" href="#symeditordimensions" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Variable</code></li></ul><h2 id="symmode" tabindex="-1">SymMode <a class="header-anchor" href="#symmode" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Variable</code></li></ul><h2 id="blockprops" tabindex="-1">blockProps <a class="header-anchor" href="#blockprops" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Variable</code></li></ul><h2 id="model" tabindex="-1">model <a class="header-anchor" href="#model" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Variable</code></li></ul><h2 id="generateblockid" tabindex="-1">generateBlockId <a class="header-anchor" href="#generateblockid" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Function</code></li></ul><h2 id="useactivation" tabindex="-1">useActivation <a class="header-anchor" href="#useactivation" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Function</code></li></ul><h2 id="useblocksizing" tabindex="-1">useBlockSizing <a class="header-anchor" href="#useblocksizing" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Function</code></li></ul><h2 id="usedynamicblocks" tabindex="-1">useDynamicBlocks <a class="header-anchor" href="#usedynamicblocks" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Function</code></li></ul><h2 id="useresizeobserver" tabindex="-1">useResizeObserver <a class="header-anchor" href="#useresizeobserver" aria-hidden="true">#</a></h2><ul><li><strong>Type</strong> <code>Function</code></li></ul>',121),t=[i];function n(d,s,c,h,p,u){return l(),o("div",null,t)}var k=e(a,[["render",n]]);export{g as __pageData,k as default};
