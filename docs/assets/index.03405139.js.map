{"version":3,"file":"index.03405139.js","sources":["../../node_modules/@vue/reactivity/node_modules/@vue/shared/dist/shared.esm-bundler.js","../../vite/dynamic-import-polyfill","../../node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","../../node_modules/@vue/runtime-core/node_modules/@vue/shared/dist/shared.esm-bundler.js","../../node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","../../node_modules/@vue/runtime-dom/node_modules/@vue/shared/dist/shared.esm-bundler.js","../../node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","../../packages/core/lib/mode.ts","../../packages/core/node_modules/uuid/dist/esm-browser/rng.js","../../packages/core/node_modules/uuid/dist/esm-browser/regex.js","../../packages/core/node_modules/uuid/dist/esm-browser/validate.js","../../packages/core/node_modules/uuid/dist/esm-browser/stringify.js","../../packages/core/lib/block-helpers.ts","../../packages/core/node_modules/uuid/dist/esm-browser/v4.js","../../packages/core/lib/use-activation.ts","../../packages/core/lib/use-dynamic-blocks.ts","../../packages/core/lib/use-resize-observer.ts","../../packages/core/lib/use-block-tree.ts","../../packages/core/lib/components/Button.tsx","../../packages/core/lib/components/ContextMenu.tsx","../../packages/core/lib/components/TreeBlockSelect.tsx","../../packages/core/lib/components/MainMenu.tsx","../../packages/core/lib/components/BlockToolbar.tsx","../../vite/preload-helper","../../packages/core/lib/components/MissingBlock/index.ts","../../packages/core/lib/components/Block.tsx","../../packages/core/lib/components/Main.tsx","../../packages/core/lib/components/Modal.tsx","../../packages/core/lib/components/BlockPicker.tsx","../../packages/core/node_modules/lodash-es/_freeGlobal.js","../../packages/core/node_modules/lodash-es/_root.js","../../packages/core/node_modules/lodash-es/_Symbol.js","../../packages/core/node_modules/lodash-es/_getRawTag.js","../../packages/core/node_modules/lodash-es/_objectToString.js","../../packages/core/node_modules/lodash-es/_baseGetTag.js","../../packages/core/node_modules/lodash-es/_trimmedEndIndex.js","../../packages/core/node_modules/lodash-es/_baseTrim.js","../../packages/core/node_modules/lodash-es/isObject.js","../../packages/core/node_modules/lodash-es/toNumber.js","../../packages/core/node_modules/lodash-es/isSymbol.js","../../packages/core/node_modules/lodash-es/isObjectLike.js","../../packages/core/node_modules/lodash-es/now.js","../../packages/core/node_modules/lodash-es/debounce.js","../../packages/core/lib/components/BlockOrdering.tsx","../../packages/core/lib/components/BlockPlaceholder.tsx","../../packages/core/lib/components/Toolbar.tsx","../../packages/core/lib/components/Select.tsx","../../packages/layout/lib/util.ts","../../packages/layout/lib/index.ts","../../packages/heading/lib/index.ts","../../packages/heading/lib/util.ts","../../packages/paragraph/lib/util.ts","../../packages/paragraph/lib/index.ts","../../packages/image/lib/util.ts","../../packages/image/lib/index.ts","../../src/main.ts","../../src/App.tsx"],"sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","const p = function polyfill(modulePath = '.', importFunctionName = '__import__') {\n    try {\n        self[importFunctionName] = new Function('u', `return import(u)`);\n    }\n    catch (error) {\n        const baseURL = new URL(modulePath, location);\n        const cleanup = (script) => {\n            URL.revokeObjectURL(script.src);\n            script.remove();\n        };\n        self[importFunctionName] = (url) => new Promise((resolve, reject) => {\n            const absURL = new URL(url, baseURL);\n            // If the module has already been imported, resolve immediately.\n            if (self[importFunctionName].moduleMap[absURL]) {\n                return resolve(self[importFunctionName].moduleMap[absURL]);\n            }\n            const moduleBlob = new Blob([\n                `import * as m from '${absURL}';`,\n                `${importFunctionName}.moduleMap['${absURL}']=m;`\n            ], { type: 'text/javascript' });\n            const script = Object.assign(document.createElement('script'), {\n                type: 'module',\n                src: URL.createObjectURL(moduleBlob),\n                onerror() {\n                    reject(new Error(`Failed to import: ${url}`));\n                    cleanup(script);\n                },\n                onload() {\n                    resolve(self[importFunctionName].moduleMap[absURL]);\n                    cleanup(script);\n                }\n            });\n            document.head.appendChild(script);\n        });\n        self[importFunctionName].moduleMap = {};\n    }\n};__VITE_IS_MODERN__&&p(\"assets/\");","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect();\r\n            this._dirty = false;\r\n        }\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, ref, isProxy, proxyRefs, toRef, reactive, shallowReadonly, track, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(job) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    const jobId = getId(job);\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < jobId ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        const pos = findInsertionIndex(job);\r\n        if (pos > -1) {\r\n            queue.splice(pos, 0, job);\r\n        }\r\n        else {\r\n            queue.push(job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `dependency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (!(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    // convert handler name to camelCase. See issue #2249\r\n    let handlerName = toHandlerKey(camelize(event));\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handlerName = toHandlerKey(hyphenate(event));\r\n        handler = props[handlerName];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            hasExtends = true;\r\n            extend(normalized, normalizeEmitsOptions(raw, appContext, true));\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            result.patchFlag > 0 &&\r\n            result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(owner);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n        validateProps(props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                setCurrentInstance(instance);\r\n                value = defaultValue(props);\r\n                setCurrentInstance(null);\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, instance) {\r\n    const rawValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */, [\r\n                    instance && instance.proxy\r\n                ]);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */, [\r\n                instance && instance.proxy\r\n            ]);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getComponentName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode || isAsyncWrapper(vnode)) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.exposed || vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        const target = getGlobalThis();\r\n        target.__VUE__ = true;\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, scopeId, vnode, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, scopeId, vnode, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (parentComponent) {\r\n            const treeOwnerId = parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') && subTree.type === Fragment) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, scopedInitialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children if not disabled\r\n            if (shapeFlag & 64 /* TELEPORT */ &&\r\n                (doRemove || !isTeleportDisabled(vnode.props))) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            // special self referencing call generated by compiler\r\n            // inferred from SFC filename\r\n            if (name === `_self`) {\r\n                return Component;\r\n            }\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if (shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* HOISTED */ && isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet isInBeforeCreate = false;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, \r\n    // public API\r\n    expose } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        isInBeforeCreate = true;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        isInBeforeCreate = false;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define methods to the proxy target,\r\n                // and those are read-only but reconfigurable, so it needs to be redefined here\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                else {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            // @ts-ignore dataOptions is not fully type safe\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            Reflect.ownKeys(provides).forEach(key => {\r\n                provide(key, provides[key]);\r\n            });\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n    if (isArray(expose)) {\r\n        if (!asMixin) {\r\n            if (expose.length) {\r\n                const exposed = instance.exposed || (instance.exposed = proxyRefs({}));\r\n                expose.forEach(key => {\r\n                    exposed[key] = toRef(publicThis, key);\r\n                });\r\n            }\r\n            else if (!instance.exposed) {\r\n                instance.exposed = EMPTY_OBJ;\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`The \\`expose\\` option is ignored when used in mixins.`);\r\n        }\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    callHookFromMixins(name, type, globalMixins, instance);\r\n    const { extends: base, mixins } = options;\r\n    if (base) {\r\n        callHookFromExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        callHookFromMixins(name, type, mixins, instance);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromExtends(name, type, base, instance) {\r\n    if (base.extends) {\r\n        callHookFromExtends(name, type, base.extends, instance);\r\n    }\r\n    const baseHook = base[name];\r\n    if (baseHook) {\r\n        callWithAsyncErrorHandling(baseHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, type, mixins, instance) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const chainedMixins = mixins[i].mixins;\r\n        if (chainedMixins) {\r\n            callHookFromMixins(name, type, chainedMixins, instance);\r\n        }\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            callWithAsyncErrorHandling(fn.bind(instance.proxy), instance, type);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return i.exposed ? i.exposed : i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (hasOwn(instance.props, key)) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance, Component);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = proxyRefs(exposed);\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get props() {\r\n                return instance.props;\r\n            },\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineProps() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmit() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineEmit() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\nfunction useContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.7\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isRuntimeOnly, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useContext, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, Fragment, h, BaseTransition, useTransitionState, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, isRuntimeOnly, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            const current = style.display;\r\n            style.cssText = next;\r\n            // indicates that the `display` of the element is controlled by `v-show`,\r\n            // so we always keep the current `display` value regardless of the `style` value,\r\n            // thus handing over control to `v-show`.\r\n            if ('_vod' in el) {\r\n                style.display = current;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (value === '' && type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = true;\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            el[key] = 0;\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [hyphenate(name.slice(2)), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    onMounted(() => watchEffect(setVars, { flush: 'post' }));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCustomElementCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCustomElementCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\n// dev only\r\nfunction injectCustomElementCheck(app) {\r\n    if (isRuntimeOnly()) {\r\n        const value = app.config.isCustomElement;\r\n        Object.defineProperty(app.config, 'isCustomElement', {\r\n            get() {\r\n                return value;\r\n            },\r\n            set() {\r\n                warn(`The \\`isCustomElement\\` config option is only respected when using the runtime compiler.` +\r\n                    `If you are using the runtime-only build, \\`isCustomElement\\` must be passed to \\`@vue/compiler-dom\\` in the build setup instead` +\r\n                    `- for example, via the \\`compilerOptions\\` option in vue-loader: https://vue-loader.vuejs.org/options.html#compileroptions.`);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        container instanceof window.ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","export enum SbMode {\n  Edit = 'edit',\n  Display = 'display',\n}\nexport const Mode = Symbol('Schlechtenburg mode');\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import { v4 as uuidv4 } from 'uuid';\n\nexport const generateBlockId = uuidv4;\n\nexport const model = {\n  prop: 'block',\n  event: 'update',\n};\n\nexport const blockProps = {\n  blockId: {\n    type: String,\n    default: generateBlockId,\n  },\n};\n","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import {\n  Ref,\n  ref,\n  inject,\n  computed,\n} from 'vue';\n\nexport const SymActiveBlock = Symbol('Schlechtenburg active block');\nexport function useActivation(currentBlockId: string|null = null) {\n  const activeBlockId: Ref<string|null> = inject(SymActiveBlock, ref(null));\n  const isActive = computed(() => activeBlockId.value === currentBlockId);\n  const activate = (id?: string|null) => {\n    activeBlockId.value = id !== undefined ? id : currentBlockId;\n  };\n  const requestActivation = () => {\n    if (activeBlockId.value) {\n      return;\n    }\n\n    activate();\n  };\n\n  return {\n    activeBlockId,\n    isActive,\n    activate,\n    requestActivation,\n  };\n}\n","import {\n  ref,\n  inject,\n  reactive,\n} from 'vue';\nimport { BlockLibrary } from './types';\nimport { Mode, SbMode } from './mode';\n\nexport const SymBlockLibrary = Symbol('Schlechtenburg block library');\nexport function useDynamicBlocks() {\n  const mode = inject(Mode, ref(SbMode.Edit));\n  const customBlocks: BlockLibrary = inject(SymBlockLibrary, reactive({}));\n  const getBlock = (name: string) => customBlocks[name];\n\n  return {\n    mode,\n    customBlocks,\n    getBlock,\n  };\n}\n","/// <reference types=\"resize-observer-browser\" />\n\nimport {\n  Ref,\n  ref,\n  inject,\n  watch,\n  provide,\n} from 'vue';\n\ninterface BlockRect {\n  height: number;\n  width: number;\n  left: number;\n  top: number;\n}\n\nexport const SymBlockDimensions = Symbol('Schlechtenburg block dimensions');\nexport const SymEditorDimensions = Symbol('Schlechtenburg editor dimensions');\nexport function useResizeObserver(el: Ref<null|HTMLElement>, symbol: symbol) {\n  const dimensions: Ref<null|BlockRect> = ref(null);\n  provide(symbol, dimensions);\n  const triggerSizeCalculation = () => {\n    if (!el.value) {\n      return;\n    }\n\n    const clientRect = el.value.getBoundingClientRect();\n    dimensions.value = {\n      width: clientRect.width,\n      height: clientRect.height,\n      left: el.value.offsetLeft,\n      top: el.value.offsetTop,\n    };\n  };\n\n  const resizeObserver = new ResizeObserver(triggerSizeCalculation);\n  const mutationObserver = new MutationObserver(triggerSizeCalculation);\n\n  watch(el, () => {\n    if (!el.value) {\n      return;\n    }\n    resizeObserver.observe(el.value);\n    mutationObserver.observe(el.value, { attributes: true, childList: false, subtree: false });\n  });\n\n  return { triggerSizeCalculation, dimensions };\n}\n\nexport function useBlockSizing() {\n  const editorDimensions: Ref<BlockRect|null> = inject(SymEditorDimensions, ref(null));\n  const blockDimensions: Ref<BlockRect|null> = inject(SymBlockDimensions, ref(null));\n\n  return { editorDimensions, blockDimensions };\n}\n","import {\n  ref,\n  Ref,\n  reactive,\n  inject,\n  provide,\n  onUnmounted,\n} from 'vue';\nimport {\n  TreeNode,\n  BlockData,\n} from './types';\n\nexport const SymBlockTree= Symbol('Schlechtenburg block tree');\nexport const SymBlockTreeRegister = Symbol('Schlechtenburg block tree register');\nexport const SymBlockTreeUnregister = Symbol('Schlechtenburg block tree unregister');\n\nexport function useBlockTree() {\n  const blockTree: Ref<TreeNode|null> = inject(SymBlockTree, ref(null));\n  const registerWithParent = inject(SymBlockTreeRegister, (_: TreeNode) => {});\n  const unregisterWithParent = inject(SymBlockTreeUnregister, (_: TreeNode) => {});\n\n  const self: TreeNode = reactive({\n    id: '',\n    name: '',\n    icon: '',\n    children: [],\n  });\n\n  // Provide a registration function to child blocks\n  provide(SymBlockTreeRegister, (block: TreeNode) => {\n    if (self.children.find((child: TreeNode) => child.id === block.id)) {\n      return;\n    }\n\n    self.children = [\n      ...self.children,\n      block,\n    ];\n  });\n\n  // Provide an unregistration function to child blocks\n  provide(SymBlockTreeUnregister, ({ id }: TreeNode) => {\n    self.children = self.children.filter((child: TreeNode) => child.id !== id);\n  });\n\n  const register = (block: BlockData<any>) => {\n    if (!block.id) {\n      throw new Error(`Cannot register a block without an id: ${JSON.stringify(block)}`);\n    }\n\n    self.id = block.id;\n    self.name = block.name;\n\n    // Register ourselves at the parent block\n    registerWithParent(self);\n  }\n\n  // Unregister from parent when we get destroyed\n  onUnmounted(() => {\n    if (self.id) {\n      unregisterWithParent(self);\n    }\n  });\n\n  return {\n    blockTree,\n    register,\n  };\n}\n","import { defineComponent } from 'vue';\n\nimport './Button.scss';\n\nexport const SbButton = defineComponent({\n  name: 'sb-button',\n\n  inheritAttrs: false,\n\n  setup(_, context) {\n    return () => (\n      <button\n        {...{\n          ...context.attrs,\n          class: (context.attrs.class || '') + ' sb-button',\n        }}\n      >\n        {context.slots.default?.()}\n      </button>\n    );\n  },\n});\n","import {\n  watch,\n  defineComponent,\n  ref,\n} from 'vue';\nimport { SbButton } from './Button';\n\nimport './ContextMenu.scss';\n\nexport const SbContextMenu = defineComponent({\n  name: 'sb-context-menu',\n\n  props: {\n    onClose: { type: Function, default: () => {} },\n    onOpen: { type: Function, default: () => {} },\n  },\n\n  setup(props, context) {\n    const opened = ref(false);\n    const open = () => { opened.value = true; };\n    const close = () => { opened.value = false; };\n    const closeOnEscape = ($event: KeyboardEvent) => {\n      if ($event.key === 'Escape') {\n        close();\n      }\n    };\n    const toggle = () => { opened.value ? close() : open() };\n\n    watch(opened, (curr, prev) => {\n      if (curr === prev) {\n        return;\n      }\n\n      if (!curr) {\n        document.body.removeEventListener('click', close);\n        document.body.removeEventListener('keypress', closeOnEscape);\n        props.onClose();\n      } else {\n        setTimeout(() => {\n          document.body.addEventListener('click', close);\n          document.body.addEventListener('keypress', closeOnEscape);\n          props.onOpen();\n        });\n      }\n    });\n\n    return () => (\n      <div class=\"sb-context\">\n        {\n          context.slots.context?.({\n            opened,\n            toggle,\n            close,\n            open,\n          }) || <SbButton {...{ onClick: toggle }}>Menu</SbButton>\n        }\n        <dialog\n          class=\"sb-context-menu\"\n          open={opened.value ? true : undefined}\n          onClick={($event: Event) => {\n            // Make sure clicks inside do not autoclose this\n            $event.stopPropagation();\n          }}\n          {...{ onClose: close /* TODO: DialogHTMLAttributes needs an onClose handler type */ }}\n        >\n            {context.slots.default?.({\n              opened,\n              toggle,\n              close,\n              open,\n            }) || null}\n        </dialog>\n      </div>\n    );\n  },\n});\n","import { defineComponent } from 'vue';\nimport { TreeNode } from '../types';\nimport { useBlockTree } from '../use-block-tree';\nimport { useActivation } from '../use-activation';\n\nimport { SbContextMenu } from './ContextMenu';\nimport { SbButton } from './Button';\n\nimport './TreeBlockSelect.scss';\n\nexport const SbTreeBlockSelect = defineComponent({\n  name: 'sb-main-menu',\n\n  setup() {\n    const { blockTree } = useBlockTree();\n    const {\n      activate,\n      activeBlockId,\n    } = useActivation();\n\n    const treeToHtml = (tree: TreeNode, close: Function) => <li\n      class={{\n        'sb-tree-block-select__block': true,\n        'sb-tree-block-select__block_active': activeBlockId.value === tree.id,\n      }}\n    >\n      <button\n        class=\"sb-tree-block-select__block-name\"\n        onClick={() => {\n          activate(tree.id);\n          close();\n        }}\n        onMouseenter={() => activate(tree.id)}\n      >{tree.name}</button>\n      {tree.children?.length\n        ? <ul class=\"sb-tree-block-select__list\">\n          {tree.children?.map((child: TreeNode) => treeToHtml(child, close))}\n        </ul>\n          : null\n      }\n    </li>;\n\n    return () => (\n      blockTree.value\n        ?  <SbContextMenu\n          class=\"sb-tree-block-select\"\n          v-slots={{\n            context: ({ toggle }: { toggle: Function }) => <SbButton {...{ onClick: toggle }}>Tree</SbButton>,\n            default: ({ close }: { close: Function }) => <ul\n              class=\"sb-tree-block-select__list sb-tree-block-select__list_base\"\n            >{treeToHtml(blockTree.value as TreeNode, close)}</ul>,\n          }}\n        />\n        : ''\n    );\n  },\n});\n","import {\n  defineComponent,\n  PropType,\n} from 'vue';\nimport { BlockData } from '../types';\nimport { SbTreeBlockSelect } from './TreeBlockSelect';\n\nimport './MainMenu.scss';\n\nexport const SbMainMenu = defineComponent({\n  name: 'sb-main-menu',\n\n  props: {\n    block: {\n      type: (null as unknown) as PropType<BlockData<any>>,\n      required: true,\n    },\n  },\n\n  setup() {\n    return () => (\n      <div class=\"sb-main-menu\">\n        <SbTreeBlockSelect />\n      </div>\n    );\n  },\n});\n","import { defineComponent } from 'vue';\n\nimport './BlockToolbar.scss';\n\nexport const SbBlockToolbar = defineComponent({\n  name: 'sb-block-toolbar',\n\n  setup() {\n    return () => (\n      <div class=\"sb-block-toolbar\"></div>\n    );\n  },\n});\n","let scriptRel;const seen = {};export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps) {\n        return baseModule();\n    }\n    // @ts-ignore\n    if (scriptRel === undefined) {\n        // @ts-ignore\n        const relList = document.createElement('link').relList;\n        // @ts-ignore\n        scriptRel =\n            relList && relList.supports && relList.supports('modulepreload')\n                ? 'modulepreload'\n                : 'preload';\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","import { defineAsyncComponent } from 'vue';\n\nexport default {\n  name: 'sb-missing-block',\n  edit: defineAsyncComponent(() => import('./display')),\n  display: defineAsyncComponent(() => import('./display')),\n};\n","import {\n  defineComponent,\n  computed,\n  watch,\n  PropType,\n  ref,\n  Ref,\n} from 'vue';\nimport { BlockData } from '../types';\nimport { SbMode } from '../mode';\nimport { useResizeObserver, SymBlockDimensions } from '../use-resize-observer';\nimport { useActivation } from '../use-activation';\nimport { useBlockTree } from '../use-block-tree';\nimport { useDynamicBlocks } from '../use-dynamic-blocks';\n\nimport SbMissingBlock from './MissingBlock';\n\nimport './Block.scss';\n\nexport const SbBlock = defineComponent({\n  name: 'sb-block',\n\n  props: {\n    block: {\n      type: (null as unknown) as PropType<BlockData<any>>,\n      required: true,\n    },\n    sortable: {\n      type: String,\n      default: null,\n    },\n    onUpdate: { type: Function, default: () => {} },\n    onPrependBlock: { type: Function, default: () => {} },\n    onAppendBlock: { type: Function, default: () => {} },\n    onRemoveSelf: { type: Function, default: () => {} },\n    onActivatePrevious: { type: Function, default: () => {} },\n    onActivateNext: { type: Function, default: () => {} },\n  },\n\n  setup(props, context) {\n    const el: Ref<null|HTMLElement> = ref(null);\n    const { mode, getBlock } = useDynamicBlocks();\n    const {\n      isActive,\n      activate,\n    } = useActivation(props.block.id);\n    const classes = computed(() => ({\n      'sb-block': true,\n      'sb-block_active': isActive.value,\n    }));\n\n    const { triggerSizeCalculation } = useResizeObserver(el, SymBlockDimensions);\n    watch(() => props.block.data, triggerSizeCalculation);\n\n    const { register } = useBlockTree();\n    register(props.block);\n    watch(props.block, () => { register(props.block); });\n\n    const onChildUpdate = (updated: {[key: string]: any}) => {\n      props.onUpdate({\n        ...props.block,\n        data: {\n          ...props.block.data,\n          ...updated,\n        },\n      });\n    };\n\n    return () => {\n      const BlockComponent = getBlock(props.block.name)?.[mode.value] as any;\n\n      if (!BlockComponent) {\n        const MissingBlock = SbMissingBlock[mode.value];\n        return <MissingBlock\n          name={props.block.name}\n          blockId={props.block.id}\n        />;\n      }\n\n      if (mode.value === SbMode.Display) {\n        return <BlockComponent\n          data={props.block.data}\n          blockId={props.block.id}\n        />;\n      }\n\n      return <div\n        ref={el}\n        class={classes.value}\n      >\n        <div class=\"sb-block__edit-cover\"></div>\n        {context.slots['context-toolbar'] ? context.slots['context-toolbar']() : null}\n        <BlockComponent\n          data={props.block.data}\n          blockId={props.block.id}\n          onUpdate={onChildUpdate}\n          onPrependBlock={props.onPrependBlock}\n          onAppendBlock={props.onAppendBlock}\n          onRemoveSelf={props.onRemoveSelf}\n          onActivatePrevious={props.onActivatePrevious}\n          onActivateNext={props.onActivateNext}\n\n          {...{\n            onClick: ($event: MouseEvent) => {\n              $event.stopPropagation();\n              activate();\n            },\n            ...context.attrs,\n          }}\n        />\n      </div>;\n    };\n  },\n});\n","import {\n  defineComponent,\n  provide,\n  shallowReactive,\n  ref,\n  PropType,\n  Ref,\n} from 'vue';\nimport {\n  BlockData,\n  BlockDefinition,\n  BlockLibrary,\n  TreeNode,\n} from '../types';\nimport { model } from '../block-helpers';\nimport { Mode, SbMode } from '../mode';\nimport { SymBlockLibrary} from '../use-dynamic-blocks';\nimport {\n  SymBlockTree,\n  SymBlockTreeRegister,\n  SymBlockTreeUnregister,\n} from '../use-block-tree';\nimport { SymEditorDimensions, useResizeObserver } from '../use-resize-observer';\nimport { SymActiveBlock } from '../use-activation';\n\nimport { SbMainMenu } from './MainMenu';\nimport { SbBlockToolbar } from './BlockToolbar';\nimport { SbBlock } from './Block';\n\nimport './Main.scss';\n\nexport const SbMain = defineComponent({\n  name: 'sb-main',\n\n  model,\n\n  props: {\n    customBlocks: {\n      type: Array as PropType<BlockDefinition<any>[]>,\n      default: () => [],\n    },\n    block: {\n      type: Object as PropType<BlockData<any>>,\n      required: true,\n    },\n    onUpdate: { type: Function, default: () => {} },\n    mode: {\n      type: String as PropType<SbMode>,\n      validator(value: any) {\n        return Object.values(SbMode).includes(value);\n      },\n      default: SbMode.Edit,\n    },\n  },\n\n  setup(props: any) { // TODO: why does the typing of props not work here?\n    const el: Ref<null|HTMLElement> = ref(null);\n    useResizeObserver(el, SymEditorDimensions);\n\n    const mode = ref(props.mode);\n    provide(Mode, mode);\n\n    const activeBlock = ref(null);\n    provide(SymActiveBlock, activeBlock);\n\n    const blockTree: Ref<TreeNode|null> = ref(null);\n    provide(SymBlockTree, blockTree);\n    provide(SymBlockTreeRegister, (block: TreeNode) => { blockTree.value = block; });\n    provide(SymBlockTreeUnregister, () => { blockTree.value = null; });\n\n    const blockLibrary: BlockLibrary = shallowReactive({\n      ...props.customBlocks.reduce(\n        (blocks: BlockLibrary, block: BlockDefinition<any>) => ({ ...blocks, [block.name]: block }),\n        {},\n      ),\n    });\n\n    provide(SymBlockLibrary, blockLibrary);\n\n    return () => (\n      <div\n        class=\"sb-main\"\n        ref={el}\n      >\n        {\n          mode.value === SbMode.Edit\n          ? <>\n            <SbMainMenu block={props.block} />\n            <SbBlockToolbar />\n          </>\n          : null\n        }\n        <SbBlock\n          block={props.block}\n          onUpdate={props.onUpdate}\n        />\n      </div>\n    );\n  },\n});\n","import {\n  defineComponent,\n  computed,\n} from 'vue';\n\nimport './Modal.scss';\n\nexport const SbModal = defineComponent({\n  name: 'sb-modal',\n\n  props: {\n    open: {\n      type: Boolean,\n      default: false,\n    },\n    onClose: { type: Function, default: () => {} },\n  },\n\n  setup(props, context) {\n    const classes = computed(() => ({\n      'sb-modal': true,\n      'sb-modal_open': props.open,\n    }));\n\n    return () => (\n      <div class={classes.value}>\n        <div\n          class=\"sb-modal__overlay\"\n          onClick={($event: MouseEvent) => {\n            $event.stopPropagation();\n            props.onClose();\n          }}\n        >\n          <div class=\"sb-modal__content\">\n            {context.slots.default?.()}\n          </div>\n        </div>\n      </div>\n    );\n  },\n});\n","import {\n  computed,\n  ref,\n  defineComponent,\n} from 'vue';\nimport { useDynamicBlocks } from '../use-dynamic-blocks';\nimport { BlockDefinition } from '../types';\n\nimport { SbButton } from './Button';\nimport { SbModal } from './Modal';\n\nimport './BlockPicker.scss';\n\nexport const SbBlockPicker = defineComponent({\n  name: 'sb-block-picker',\n\n  props: {\n    onPickedBlock: { type: Function, default: () => {} },\n  },\n\n  setup(props) {\n    const open = ref(false);\n    const { customBlocks } = useDynamicBlocks();\n\n    const blockList = computed(() => Object.keys(customBlocks).map((key) => customBlocks[key]));\n\n    const selectBlock = (block: BlockDefinition<any>) => () => {\n      open.value = false;\n      props.onPickedBlock({\n        name: block.name,\n        id: `${+(new Date())}`,\n        data: block.getDefaultData(),\n      });\n    };\n\n    return () => (\n      <div class=\"sb-block-picker\">\n        <SbButton\n          class=\"sb-block-picker__add-button\"\n          {...{\n            type: 'button',\n            onClick: ($event: MouseEvent) => {\n              open.value = true;\n              $event.stopPropagation();\n            },\n          }}\n        >+</SbButton>\n        <SbModal\n          open={open.value}\n          onClose={() => {\n            open.value = false;\n          }}\n          {...{ onClick: ($event: MouseEvent) => $event.stopPropagation() }}\n        >\n          {...blockList.value.map((block: BlockDefinition<any>) => (\n            <SbButton\n              {...{\n                type: 'button',\n                onClick: () => selectBlock(block),\n              }}\n            >{block.name}</SbButton>\n          ))}\n        </SbModal>\n      </div>\n    );\n  },\n});\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import { debounce } from 'lodash-es';\nimport {\n  watch,\n  reactive,\n  computed,\n  defineComponent,\n} from 'vue';\nimport { useBlockSizing } from '../use-resize-observer';\n\nimport { SbButton } from './Button';\n\nimport './BlockOrdering.scss';\n\nexport const SbBlockOrdering = defineComponent({\n  name: 'sb-block-ordering',\n\n  props: {\n    orientation: {\n      type: String,\n      default: null,\n    },\n    onRemove: { type: Function, default: () => {} },\n    onMoveBackward: { type: Function, default: () => {} },\n    onMoveForward: { type: Function, default: () => {} },\n  },\n\n  setup(props) {\n    const styles = reactive({\n      top: '',\n      right: '',\n    });\n\n    const classes = computed(() => ({\n      'sb-block-ordering': true,\n      [`sb-block-ordering_${props.orientation}`]: !!props.orientation,\n    }));\n\n    const { editorDimensions, blockDimensions } = useBlockSizing();\n    const resetStyles = debounce(() => {\n      if (!editorDimensions.value || !blockDimensions.value) {\n        return;\n      }\n\n      const right = editorDimensions.value.width - blockDimensions.value.left;\n      styles.top = `${blockDimensions.value.top}px`;\n      styles.right = `${right}px`;\n    });\n    watch(editorDimensions, resetStyles);\n    watch(blockDimensions, resetStyles);\n    watch(() => props.orientation, resetStyles);\n\n    return () => (\n      <div\n        class={classes.value}\n        style={styles}\n        onClick={($event: MouseEvent) => $event.stopPropagation()}\n      >\n        <SbButton {...{onClick: props.onMoveBackward}}>{props.orientation === 'vertical' ? '↑' : '←'}</SbButton>\n        <SbButton {...{onClick: props.onRemove}}>x</SbButton>\n        <SbButton {...{onClick: props.onMoveForward}}>{props.orientation === 'vertical' ? '↓' : '→'}</SbButton>\n      </div>\n    );\n  },\n});\n","import { defineComponent } from 'vue';\nimport { BlockData } from '../types';\n\nimport { SbBlockPicker } from './BlockPicker';\n\nimport './BlockPlaceholder.scss';\n\nexport const SbBlockPlaceholder = defineComponent({\n  name: 'sb-block-placeholder',\n\n  props: {\n    onInsertBlock: { type: Function, default: () => {} },\n  },\n\n  setup(props) {\n    return () => (\n      <div class=\"sb-block-placeholder\">\n        <SbBlockPicker\n          onPickedBlock={(block: BlockData<any>) => props.onInsertBlock(block)}\n        />\n      </div>\n    );\n  },\n});\n","import { debounce } from 'lodash-es';\nimport {\n  defineComponent,\n  watch,\n  reactive,\n} from 'vue';\nimport { useBlockSizing } from '../use-resize-observer';\n\nimport './Toolbar.scss';\n\nexport const SbToolbar = defineComponent({\n  name: 'sb-toolbar',\n\n  setup(_, context) {\n    const styles = reactive({\n      bottom: '',\n      left: '',\n      maxWidth: '',\n    });\n\n    const { editorDimensions, blockDimensions } = useBlockSizing();\n    const resetStyles = debounce(() => {\n      if (!editorDimensions.value || !blockDimensions.value) {\n        return;\n      }\n\n      const bottom = editorDimensions.value.height - blockDimensions.value.top;\n      styles.bottom = `${bottom}px`;\n      styles.left = `${blockDimensions.value.left}px`;\n      styles.maxWidth = `${blockDimensions.value.width}px`;\n    });\n    watch(editorDimensions, resetStyles);\n    watch(blockDimensions, resetStyles);\n\n    return () => (\n      <div\n        class=\"sb-toolbar\"\n        style={styles}\n        onClick={($event: MouseEvent) => $event.stopPropagation()}\n      >\n        {context.slots?.default?.()}\n      </div>\n    );\n  },\n});\n","import { defineComponent } from 'vue';\nimport './Select.scss';\n\nexport const SbSelect = defineComponent({\n  name: 'sb-select',\n\n  inheritAttrs: false,\n\n  setup(_, context) {\n    return () => (\n      <div class=\"sb-select\">\n        <select\n          class=\"sb-select__input\"\n          {...context.attrs}\n        >\n          {context.slots.default?.()}\n        </select>\n      </div>\n    );\n  },\n});\n","import { BlockData } from '@schlechtenburg/core';\n\nexport interface LayoutData {\n  orientation: string;\n  children: BlockData<any>[];\n}\n\nexport const getDefaultData: () => LayoutData = () => ({\n  orientation: 'vertical',\n  children: [],\n});\n","import { defineAsyncComponent } from 'vue';\nimport { getDefaultData } from './util';\n\nexport * from './util';\nexport const name = 'sb-layout';\n\nexport default {\n  name,\n  getDefaultData,\n  edit: defineAsyncComponent(() => import('./edit')),\n  display: defineAsyncComponent(() => import('./display')),\n};\n","import { defineAsyncComponent } from 'vue';\nimport { getDefaultData } from './util';\n\nexport * from './util';\nexport const name = 'sb-heading';\n\nexport default {\n  name,\n  getDefaultData,\n  edit: defineAsyncComponent(() => import('./edit')),\n  display: defineAsyncComponent(() => import('./edit')),\n};\n","export const a = 1;\nexport const getDefaultData = () => ({});\n","export interface ParagraphData {\n  value: string;\n  align: string;\n}\n\nexport const getDefaultData: () => ParagraphData = () => ({\n  value: '',\n  align: 'left',\n});\n","import { defineAsyncComponent } from 'vue';\nimport { getDefaultData } from './util';\n\nexport * from './util';\nexport const name = 'sb-paragraph';\n\nexport default {\n  name,\n  getDefaultData,\n  edit: defineAsyncComponent(() => import('./edit')),\n  display: defineAsyncComponent(() => import('./display')),\n};\n","import {\n  BlockData,\n  generateBlockId,\n} from '@schlechtenburg/core';\nimport {\n  name as paragraphName,\n  ParagraphData,\n  getDefaultData as getDefaultParagraphData\n} from '@schlechtenburg/paragraph';\n\nexport interface ImageData {\n  src: string;\n  alt: string;\n  description: BlockData<ParagraphData>;\n}\n\nexport const getDefaultData: () => ImageData = () => ({\n  src: '',\n  alt: '',\n  description: {\n    id: generateBlockId(),\n    name: paragraphName,\n    data: getDefaultParagraphData(),\n  },\n});\n","import { defineAsyncComponent } from 'vue';\nimport { getDefaultData } from './util';\n\nexport * from './util';\nexport const name = 'sb-image';\n\nexport default {\n  name,\n  getDefaultData,\n  edit: defineAsyncComponent(() => import('./edit')),\n  display: defineAsyncComponent(() => import('./display')),\n};\n","import { createApp } from 'vue'\nimport App from './App';\nimport './main.scss';\n\ncreateApp(App).mount('#app');\n","import {\n  onBeforeMount,\n  computed,\n  defineComponent,\n  reactive,\n  ref,\n} from 'vue';\n\nimport { SbMain, BlockData, SbMode } from '../packages/core/lib';\n\nimport SbLayout from '../packages/layout/lib';\nimport SbHeading from '../packages/heading/lib';\nimport SbParagraph from '../packages/paragraph/lib';\nimport SbImage from '../packages/image/lib';\n\nimport './App.scss';\n\nexport default defineComponent({\n  name: 'App',\n\n  setup() {\n    const activeTab = ref('edit');\n    const block: BlockData<any> = reactive({\n      name: 'none',\n      id: '0',\n      data: null,\n    });\n\n    onBeforeMount(async () => {\n      const res = await fetch('./initial-data.json');\n      const data = await res.json();\n      block.name = data.name;\n      block.id = data.id;\n      block.data = data.data;\n    });\n\n    const displayedElement = computed(() => {\n      switch (activeTab.value) {\n        case SbMode.Edit:\n          return <SbMain\n            block={block}\n            onUpdate={(newBlock: BlockData<any>) => {\n              block.data = newBlock.data;\n            }}\n            customBlocks={[\n              SbLayout,\n              SbHeading,\n              SbImage,\n              SbParagraph,\n            ]}\n            key=\"edit\"\n            mode={SbMode.Edit}\n          />;\n        case SbMode.Display:\n          return <SbMain\n            block={block}\n            customBlocks={[\n              SbLayout,\n              SbHeading,\n              SbImage,\n              SbParagraph,\n            ]}\n            key=\"display\"\n            mode={SbMode.Display}\n          />;\n        case 'data':\n          return <pre><code>{ JSON.stringify(block, null, 2) }</code></pre>;\n      }\n    });\n\n    return () => {\n      return <div id=\"app\">\n        <select\n          value={activeTab.value}\n          onChange={($event: Event) => {\n            activeTab.value = ($event.target as HTMLSelectElement).value;\n          }}\n        >\n          <option>edit</option>\n          <option>display</option>\n          <option>data</option>\n        </select>\n        {displayedElement.value}\n      </div>;\n    };\n  },\n});\n"],"names":["str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","modulePath","importFunctionName","Function","error","baseURL","URL","location","cleanup2","script","revokeObjectURL","src","remove","url","Promise","resolve","reject","absURL","self","moduleMap","moduleBlob","Blob","type","assign","document","createElement","createObjectURL","[object Object]","Error","head","appendChild","p","EMPTY_OBJ","NOOP","extend","hasOwnProperty","prototype","hasOwn","key","call","isArray","Array","isMap","toTypeString","isFunction","isSymbol","isObject","objectToString","toString","value","isIntegerKey","parseInt","hasChanged","oldValue","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","fn","options","_isEffect","isEffect","raw","effect2","active","scheduler","includes","push","shouldTrack","pop","id","uid","allowRecurse","deps","createReactiveEffect","lazy","onStop","delete","trackStack","last","target","depsMap","get","set","Map","dep","Set","has","add","newValue","oldTarget","effects","add2","effectsToAdd","forEach","key2","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","filter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly2","shallow","receiver","readonlyMap","reactiveMap","targetIsArray","Reflect","res","isRef","readonly","reactive","method","args","arr","toRaw","this","l","apply","hadKey","Number","result","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","isShallow","rawTarget","rawKey","track","wrap","has2","get2","hadItems","size","clear","callback","thisArg","observed","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","next","mutableInstrumentations","get$1","has$1","set$1","deleteEntry","createForEach","shallowInstrumentations","readonlyInstrumentations","createReadonlyMethod","instrumentations","createIterableMethod","mutableCollectionHandlers","createInstrumentationGetter","shallowCollectionHandlers","readonlyCollectionHandlers","isExtensible","rawType","targetTypeMap","slice","toRawType","createReactiveObject","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","getTargetType","proxy","Proxy","isReadonly","isReactive","convert","r","Boolean","__v_isRef","rawValue","RefImpl","createRef","_rawValue","_shallow","_value","newVal","shallowUnwrapHandlers","unref","ref2","objectWithRefs","_object","_key","getter","_setter","_dirty","effect","isGloballyWhitelisted","item","normalized","normalizeStyle","isString","parseStringStyle","listDelimiterRE","propertyDelimiterRE","cssText","ret","tmp","trim","normalizeClass","name2","EMPTY_ARR","NO","onRE","isOn","test","isModelListener","startsWith","el","indexOf","splice","isPromise","then","catch","isReservedProp","cacheStringFunction","cache","camelizeRE","camelize","replace","_","c","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","toHandlerKey","invokeArrayFns","fns","arg","def","obj","defineProperty","configurable","enumerable","toNumber","n","parseFloat","isNaN","instance","err","callWithErrorHandling","values","callWithAsyncErrorHandling","throwInDev","vnode","cur","parent","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","contextVNode","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","currentFlushPromise","currentPreFlushParentJob","p2","bind","job","pos","start","end","jobId","getId","middle","findInsertionIndex","flushJobs","cb","activeQueue","pendingQueue","index","seen2","parentJob","deduped","sort","a","b","Infinity","event","rawArgs","props","isModelListener2","modelArg","modifiersKey","number","handlerName","handler","onceHandler","emitted","comp","asMixin","deopt","__emits","emits","hasExtends","extendEmits","raw2","normalizeEmitsOptions","mixins","extends","currentRenderingInstance","Component","withProxy","propsOptions","slots","attrs","emit","render","renderCache","data","setupState","ctx","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","render2","getFunctionalFallthrough","root2","inheritAttrs","keys","some","filterModelListeners","cloneVNode","dirs","concat","transition","createVNode","Comment","children","singleRoot","child","isVNode","prevProps","nextProps","emitsOptions","nextKeys","isEmitListener","s","filterSingleRoot","isRenderingCompiledSlot","setCompiledSlotRendering","renderFnWithContext","disableTracking","currentBlock","owner","blockStack","_c","rawProps","needCastKeys","camelKey","rawCurrentProps","resolvePropValue","opt","hasDefault","defaultValue","default","__props","extendProps","normalizePropsOptions","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","String","ctor","match","getType","expectedTypes","len","isSameType","hook","currentInstance","prepend","hooks","wrappedHook","__weh","isUnmounted","unshift","createHook","lifecycle","isInSSRComponentSetup","injectHook","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","INITIAL_WATCHER_VALUE","source","doWatch","immediate","deep","flush","onTrack","onTrigger","forceTrigger","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","suspense","isMounted","publicThis","isKeepAlive","__isKeepAlive","__wdc","current","isDeactivated","keepAliveRoot","injected","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","withCtx","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","prevVNode","bindings","oldBindings","binding","dir","app","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","warnHandler","components","directives","provides","hydrate","rootComponent","rootProps","context","createAppContext","installedPlugins","_uid","_component","_props","_container","_context","version","use","plugin","install","mixin","component","directive","rootContainer","isHydrate","__vue_app__","provide","setup","name","loader","loadingComponent","errorComponent","delay","timeout","suspensible","onError","userOnError","resolvedComp","pendingRequest","retries","load","thisRequest","__esModule","toStringTag","defineComponent","__asyncLoader","createInnerComp","loaded","ref","delayed","prodEffectOptions","queueJob","pendingBranch","setRef","rawRef","oldRawRef","parentSuspense","isAsyncWrapper","exposed","oldRef","refs","doSet","createHydrationFns","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","isSVG","optimized","isSameVNodeType","getNextHostNode","patchFlag","dynamicChildren","Text","Static","Fragment","process","internals","processText","processCommentNode","mountStaticNode","moveStaticNode","removeStaticNode","processElement","mountElement","vnodeHook","scopeId","is","unmountChildren","onVnodeBeforeMount","needCallTransitionHooks","persisted","beforeEnter","onVnodeMounted","invokeVNodeHook","enter","invokeDirectiveHook","treeOwnerId","__scopeId","subTree","mountChildren","cloneIfMounted","patchElement","oldProps","newProps","onVnodeBeforeUpdate","class","style","propsToUpdate","dynamicProps","prev","areChildrenSVG","onVnodeUpdated","patchBlockChildren","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","patchProps","processFragment","fragmentStartAnchor","fragmentEndAnchor","processComponent","activate","mountComponent","initialVNode","emptyAppContext","uid$1","root","update","accessCache","setupContext","suspenseId","pendingId","asyncDep","asyncResolved","bc","bm","m","bu","u","um","bum","da","rtg","rtc","createComponentInstance","renderer","isSSR","isStateful","isStatefulComponent","InternalObjectKey","shallowReactive","setupResult","PublicInstanceProxyHandlers","expose","proxyRefs","createSetupContext","resolvedResult","setupStatefulComponent","registerDep","setupRenderEffect","placeholder","updateComponent","nextVNode","prevChildren","nextChildren","$stable","hasPropsChanged","shouldUpdateComponent","originNext","nextTree","renderComponentRoot","prevTree","hydrateNode","scopedInitialVNode","updateComponentPreRender","rawPrevProps","kebabKey","camelizedKey","needDeletionCheck","deletionComparisonTarget","patchChildren","c1","prevShapeFlag","c2","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","patchKeyedChildren","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","arrI","getSequence","nextIndex","move","moveType","leave","delayLeave","afterLeave","remove3","performLeave","unmount","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","isTeleportDisabled","onVnodeUnmounted","remove2","performRemove","removeFragment","unmountComponent","_vnode","mt","mc","pc","pbc","o","createApp","createAppAPI","baseCreateRenderer","ch1","ch2","disabled","NULL_DYNAMIC_COMPONENT","__v_isVNode","normalizeKey","normalizeRef","isBlockNode","cloned","__vccOpts","isProxy","klass","__isSuspense","isSuspense","__isTeleport","isTeleport","ssContent","ssFallback","targetAnchor","staticCount","content","fallback","normalizeSuspenseSlot","normalizeSuspenseChildren","extraProps","mergeRef","mergedProps","mergeProps","text","flag","slot","slotFlag","createTextVNode","toMerge","existing","incoming","parentProvides","treatDefaultAsFactory","arguments","isInBeforeCreate","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computed","computedOptions","methods","watch","watchOptions","provideOptions","inject","injectOptions","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","globalMixins","from","methodHandler","resolveData","dataFn","watchOptions2","provideOptions2","object","ObjectRefImpl","toRef","base","selfHook","baseHook","chainedMixins","path","segments","createPathGetter","createWatcher","to","strats","mergeOptions","getPublicInstance","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","__merged","resolveMergedOptions","$forceUpdate","$nextTick","nextTick","$watch","instanceWatch","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","setCurrentInstance","_rc","getterOrOptions","setter","ComputedRefImpl","computed$1","isSpecialBooleanAttr","svgNS","doc","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","createTextNode","node","nodeValue","textContent","querySelector","selector","setAttribute","temp","innerHTML","first","firstChild","importantRE","setStyle","setProperty","prefixed","rawName","cached","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","Date","now","createEvent","timeStamp","cachedNow","reset","prevValue","nextValue","invokers","_vei","existingInvoker","optionsModifierRE","parseName","addEventListener","initialValue","invoker","e","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","getNow","createInvoker","removeEventListener","nativeOnRE","rendererOptions","transitionClasses","_vtc","join","className","display","removeAttribute","tagName","shouldSetAsProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","SbMode","SbMode2","Mode","getRandomValues","rnds8","Uint8Array","crypto","msCrypto","uuid","REGEX","byteToHex","substr","generateBlockId","buf","offset","rnds","random","rng","validate","TypeError","stringify","model","blockProps","blockId","SymActiveBlock","currentBlockId","activeBlockId","isActive","requestActivation","SymBlockLibrary","mode","Edit","customBlocks","getBlock","SymBlockDimensions","SymEditorDimensions","symbol","dimensions","triggerSizeCalculation","clientRect","getBoundingClientRect","width","height","left","offsetLeft","top","offsetTop","resizeObserver","ResizeObserver","mutationObserver","MutationObserver","observe","attributes","childList","subtree","editorDimensions","blockDimensions","SymBlockTree","SymBlockTreeRegister","SymBlockTreeUnregister","blockTree","registerWithParent","unregisterWithParent","self2","icon","block","find","register","JSON","SbButton","SbContextMenu","onClose","onOpen","opened","open","close","closeOnEscape","$event","toggle","curr","body","onClick","undefined","stopPropagation","SbTreeBlockSelect","useBlockTree","useActivation","treeToHtml","tree","SbMainMenu","required","SbBlockToolbar","scriptRel","seen","__vitePreload","baseModule","relList","supports","all","isCss","endsWith","cssSelector","link","rel","as","crossOrigin","href","rej","edit","defineAsyncComponent","SbBlock","sortable","onUpdate","onPrependBlock","onAppendBlock","onRemoveSelf","onActivatePrevious","onActivateNext","useDynamicBlocks","classes","useResizeObserver","onChildUpdate","__assign","BlockComponent","MissingBlock","SbMissingBlock","Display","SbMain","validator","activeBlock","blockLibrary","reduce","blocks","SbModal","SbBlockPicker","onPickedBlock","blockList","getDefaultData","selectBlock","freeGlobal","global","freeSelf","objectProto","nativeObjectToString","symToStringTag","isOwn","unmasked","getRawTag","reWhitespace","reTrimStart","string","trimmedEndIndex","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isObjectLike","baseGetTag","other","valueOf","baseTrim","isBinary","nativeMax","max","nativeMin","func","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","time","setTimeout","timerExpired","invokeFunc","timeSinceLastCall","shouldInvoke","trailingEdge","timeWaiting","remainingWait","isInvoking","leadingEdge","cancel","debounced","SbBlockOrdering","orientation","onRemove","onMoveBackward","onMoveForward","styles","right","useBlockSizing","resetStyles","debounce","SbBlockPlaceholder","onInsertBlock","SbToolbar","bottom","maxWidth","SbSelect","align","alt","description","createRenderer","mount","containerOrSelector","normalizeContainer","template","Element","activeTab","async","fetch","json","displayedElement","newBlock","SbLayout","SbHeading","SbImage","SbParagraph"],"mappings":"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"}